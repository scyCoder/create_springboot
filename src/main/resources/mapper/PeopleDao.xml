<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.PeopleDao">

    <resultMap type="com.example.demo.entity.People" id="PeopleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="VARCHAR"/>
        <result property="age" column="age" jdbcType="INTEGER"/>
        <result property="isTeacher" column="is_teacher" jdbcType="BOOLEAN"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="updatedAt" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="PeopleMap">
        select
          id, name, sex, age, is_teacher, created_at, updated_at
        from people
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="PeopleMap">
        select
          id, name, sex, age, is_teacher, created_at, updated_at
        from people
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="PeopleMap">
        select
        id, name, sex, age, is_teacher, created_at, updated_at
        from people
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="sex != null and sex != ''">
                and sex = #{sex}
            </if>
            <if test="age != null">
                and age = #{age}
            </if>
            <if test="isTeacher != null">
                and is_teacher = #{isTeacher}
            </if>
            <if test="createdAt != null">
                and created_at = #{createdAt}
            </if>
            <if test="updatedAt != null">
                and updated_at = #{updatedAt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into people(name, sex, age, is_teacher, created_at, updated_at)
        values (#{name}, #{sex}, #{age}, #{isTeacher}, #{createdAt}, #{updatedAt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into people(name, sex, age, is_teacher, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.sex}, #{entity.age}, #{entity.isTeacher}, #{entity.createdAt},
            #{entity.updatedAt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into people(name, sex, age, is_teacher, created_at, updated_at)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.sex}, #{entity.age}, #{entity.isTeacher}, #{entity.createdAt},
            #{entity.updatedAt})
        </foreach>
        on duplicate key update
        name = values(name) , sex = values(sex) , age = values(age) , is_teacher = values(is_teacher) , created_at =
        values(created_at) , updated_at = values(updated_at)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update people
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="sex != null and sex != ''">
                sex = #{sex},
            </if>
            <if test="age != null">
                age = #{age},
            </if>
            <if test="isTeacher != null">
                is_teacher = #{isTeacher},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from people where id = #{id}
    </delete>

</mapper>